1. 这是一个dp问题。
2. 令f[x]为以状态x为起始，需要执行下一步的玩家的胜负态。取f[x]=0为必败，f[x]=1为必胜。
3. 所有终点状态都有固定的值，若执行操作而到达终点状态x的玩家为胜利，则f[x]=0（失败），即，与游戏规则取反。
4. 若x的所有下一步状态都已知，若下一步中存在必败态，即f[x']=0，则x必胜，即f[x]=1。反之，则必败。由于状态图为DAG且最终能到达终点状态，用反向DAG的拓扑顺序可以求得所有状态的f值 - 若某个节点以拓扑序被访问，若其f[x]=0，则将所有能到达它的节点标记为f[x']=1；若f[x]=1，则不进行任何处理。

关于4的必败态证明：若状态x‘能到达一个必败态x“，而x能到达x'，在玩家已知该结果的情况下从状态x开始操作，不会优先选择前往状态x'，否则对手玩家一定会执行x'->x"的操作。然而，若x能到达的所有节点都是必胜态，意味着所有这些节点都能前往与之对应的必败态的节点，因此x必败。