问题描述：一个长度为N的数列，存在M个查询，每个查询表示为(l[i], r[i])，要求输出数列中从l[i]到r[i]段不同数字的个数。
解法：将数列分解成sqrt(N)个连续区间。然后对查询进行排序，对于左端点在不同区间的查询，按区间顺序排序。对于左端点在同一区间的查询，若区间编号为奇数，按右端点从小到大排；若区间编号为偶数，按右端点从大到小排（一个2倍效率的常数优化）。按排序后的顺序处理每个查询，将当前维护的统计区间通过分别移动区间左右端点到查询区间，更改统计数据并记录结果。
时间复杂度分析：
1. 由于查询按左端点所属区间的从小到大进行排序，因此左端点在不同区间间移动的总位移量为O(N)。左端点在同一区间的查询中的位移量每次不超过sqrt(N)，因此左端点的总计位移量为M*sqrt(N)。
2. 同1所述，不同区间的查询总量不超过sqrt(N)个，该类每个查询对右端点的最大位移量是N，因此总量不超过N^3/2。对于同一区间的所有查询，右端点是按某一方向进行排序，因此同一区间的所有查询对右端点的总位移量为O(N)。一共有sqrt(N)个区间。因此同一区间所有查询对右端点造成的总位移量不超过N^3/2。因此右端点的总偏移量为O(N^3/2)。
综上所述，该算法的时间复杂度为O(M*N^1/2+N^3/2)。

备注：若数列元素范围比较大，还需要维护一个平衡树进行统计，需要额外的log(N)复杂度。
