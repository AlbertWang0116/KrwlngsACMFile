问题1. 以树中每个节点为根遍历它的子树，总时间复杂度最坏是多少？
由一条链形成的树的总时间复杂度达到最坏的O(N^2)。

问题2. 设一个节点的主子树为其子树中节点数最多的一颗子树。以树中每个节点为根，遍历它的除主子树以外的所有节点，总时间复杂度最坏是多少？
直觉上而言，每个节点遍历的节点数与其子树总节点数达到固定比例时的情况最坏。因为若树中某些节点遍历节点数与子树总节点数如果不一致，通过重构为比例一致的树，能使复杂度变得更高。
设一次操作有1/x的节点没有被遍历到，则该树是一棵[x上取整]叉树(因为被遍历到的子树节点数没有没被遍历到的那棵子树多）。因此该树总共有log(x, N)层。同一层节点的操作复杂度之和为该层与该层一下总节点数的(x-1)/x倍<=N*(x-1)/x。因此总时间复杂度为N*((x-1)/x)*log(x-1, N)。通过程序模拟计算，在x无限趋近于1的时候，该值达到最大。但其收敛值无法达到log(2, N)。因此总时间复杂度上界为NlogN。

注：问题2若要能完整证明，必须先证明均分树为最坏情况，但此证明已超出当前能力范围之外。
